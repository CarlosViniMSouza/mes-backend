// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

model User {
  id        String   @id @default(uuid()) @db.Char(36)
  nome      String   @db.VarChar(50)
  login     String   @db.VarChar(20)
  senha     String   @db.Char(60)
  email     String   @unique @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("usuarios")
}

model ChangeRequest {
  id                  String    @id @default(uuid()) @db.Char(36)
  nomeSolicitante     String    @db.VarChar(50)
  nomeSistema         String    @db.VarChar(50)
  dataCriacao         DateTime  @default(now())
  descricaoRequisicao String    @db.VarChar(500)
  statusRequisicao    Int?      @db.Int()
  anexo               Bytes?    @db.Blob()
  dataFechamento      DateTime? @db.Date()

  changeAnalysis ChangeRequestAnalysis?

  @@map("requisicoes")
}

model ChangeRequestAnalysis {
  id         String  @id @default(uuid()) @db.Char(36)
  aprovacao  Boolean @db.Bit(1)
  observacao String  @db.VarChar(500)
  escopo     String  @db.VarChar(500)

  idRequest     String        @unique
  changeRequest ChangeRequest @relation(fields: [idRequest], references: [id])

  changeProject ChangeRequestProject?

  @@map("requisicoes_analise")
}

model ChangeRequestProject {
  id        String @id @default(uuid()) @db.Char(36)
  descricao String @db.VarChar(5000)
  anexo     Bytes? @db.Blob()

  idAnalysis       String                @unique
  changeImplements ChangeRequestAnalysis @relation(fields: [idAnalysis], references: [id])

  changeImplement ChangeRequestImplement?

  @@map("requisicoes_projeto")
}

model ChangeRequestImplement {
  id        String @id @default(uuid()) @db.Char(36)
  descricao String @db.VarChar(5000)
  anexo     Bytes? @db.Blob()

  idProject     String               @unique
  changeProject ChangeRequestProject @relation(fields: [idProject], references: [id])

  changeTestes ChangeRequestTestSist?

  @@map("requisicoes_implementacao")
}

model ChangeRequestTestSist {
  id String @id @default(uuid()) @db.Char(36)

  aprovado  Boolean  @db.Bit(1)
  descricao String   @db.VarChar(500)
  data      DateTime @default(now())

  idImplement  String                 @unique
  changeTestes ChangeRequestImplement @relation(fields: [idImplement], references: [id])

  changeAccept ChangeRequestTestAcc?

  @@map("requisicoes_teste_sistema")
}

model ChangeRequestTestAcc {
  id String @id @default(uuid()) @db.Char(36)

  aprovado  Boolean  @db.Bit(1)
  descricao String   @db.VarChar(500)
  data      DateTime @default(now())

  idTestSis    String                @unique
  changeTestes ChangeRequestTestSist @relation(fields: [idTestSis], references: [id])

  changeDelivery ChangeRequestDelivery?

  @@map("requisicoes_teste_aceite")
}

model ChangeRequestDelivery {
  id        String @id @default(uuid()) @db.Char(36)
  descricao String @db.VarChar(5000)
  anexo     Bytes? @db.Blob()

  idTesteAcc   String               @unique
  changeAccept ChangeRequestTestAcc @relation(fields: [idTesteAcc], references: [id])

  @@map("requisicoes_entrega")
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
